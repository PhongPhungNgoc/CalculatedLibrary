plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'maven-publish'
}

//def artifactId = 'calculated_lib'
//def groupId = 'com.phongpn.calculatedlibrary'

project.ext {
    artifactId = 'calculated_lib'
    groupId = 'com.phongpn.calculatedlibrary'
}

android {
    compileSdk 31

    defaultConfig {
        minSdk 26
        targetSdk 31
        versionCode 1
        versionName "4.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:+'
    androidTestImplementation 'androidx.test.espresso:espresso-core:+'
}

apply from: '../publish_local.gradle'

//project.afterEvaluate {
//    publishing {
//        publications {
//            library(MavenPublication) {
//                setGroupId groupId
//                setArtifactId artifactId
//                version android.defaultConfig.versionName
//
//                artifact bundleDebugAar
//            }
//        }
//    }
//}

//project.afterEvaluate {
//    publishing {
//        publications {
//            library(MavenPublication) {
//                setGroupId groupId
//                setArtifactId artifactId
//                version android.defaultConfig.versionName
//                artifact bundleReleaseAar
//
//                pom.withXml {
//                    def dependenciesNode = asNode().appendNode('dependencies')
//                    configurations.compile.allDependencies.each {
//                        if (it.group != null && (it.name != null || "unspecified" == it.name) && it.version != null) {
//                            def dependencyNode = dependenciesNode.appendNode('dependency')
//                            dependencyNode.appendNode('groupId', it.group)
//                            dependencyNode.appendNode('artifactId', it.name)
//                            dependencyNode.appendNode('version', it.version)
//                        }
//                    }
//                }
//            }
//        }
//    }
//}